os.loadAPI("blockUtils")

function down()
    if turtle.down() then
        blocksMoved['d'] = blocksMoved['d'] + 1
    end
end

function forward()
    turtle.dig()
    if turtle.forward() then
        blocksMoved['f'] = blocksMoved['f'] + 1
    end
end

function digDown()
    turtle.digDown()
    down()
end

function buildableBlockBelow()
    local blockExists, blockDetails = turtle.inspectDown()
    if not blockExists then return false else
        local blockName = blockDetails['name']
        return (blockUtils.isValidBlockType(blockName))
    end
end

function findBlockBelow()
    while not buildableBlockBelow() do
        digDown()
    end

    --go down a bit more to be safe
    digDown()
    digDown()
    digDown()
end

function moveAway(numOfBlocks)
    blocksMoved = {}
    blocksMoved['u'] = 0
    blocksMoved['d'] = 0
    blocksMoved['f'] = 0
    blocksMoved['r'] = 0
    blocksMoved['l'] = 0

    for i=1,numOfBlocks do
        forward()
    end
end

function returnToOriginalPosition()
    for i=1,blocksMoved['d'] do
        local moved = turtle.up()
        while not moved do
            turtle.digUp()
            moved = turtle.up()
        end
    end

    for i=1,blocksMoved['f'] do
        local moved = turtle.back()
        while not moved do
            moved = turtle.back()
        end
    end
end
